1.第一修改dev.env.js
dev.env.js   文件修改
'use strict'
const merge = require('webpack-merge')
const prodEnv = require('./prod.env')
module.exports = merge(prodEnv, {
  NODE_ENV: '"development"',
  API_HOST: '"http://test.dianbeikaka.com/repayment"' // 开发环境接口地址(这里是增加的内容)
})

2.第二修改prod.env.js
prod.env.js  文件修改
'use strict'
module.exports = {
  NODE_ENV: '"production"',
  API_HOST: '"http://app.dianbeikaka.com/repayment"'  // 正式环境接口地址(这里是增加的内容)
}

3.第三配置好的环境在main.js挂载到vue原型上
main.js  引入
import Vue from 'vue'
import App from './App'
import router from './router'
import axios from 'axios'
import qs from 'qs'
//qs用于转字符串，因为axios请求参数是对象，后台接受不到
Vue.prototype.qs = qs
Vue.prototype.$http = axios
Vue.config.productionTip = false
//配置的环境变量挂到vue原型上，方便全局使用。
Vue.prototype.baseURL = process.env.API_HOST;

4.axios请求
方法一：
this.baseURL：配置的开发环境和生产环境挂载到vue原型上面使用this.baseURL。
this.$http.post(this.baseURL +  '/articleEdit/getArticleList',this.qs.stringify({
                pageNum:1,
                pageSize:10,
                type:2,
                })).then(response=>{
                  console.log(response.data.dataList);
                  this.article = response.data.dataList;
                  for(var i = 0;i < response.data.dataList.length;i++){
                    $('.content').eq(i).append(response.data.dataList[i].content);
                    var time = response.data.dataList[i].createDate.substr(0,10)
                    $('.new1 div').eq(i).html(time)
                  }
                })
                .catch(function (error) {
                  console.log(error);
                });

方法二：
axios.post(this.baseURL + '/articleEdit/getArticleList',this.qs.stringify({
            pageNum:1,
            pageSize:10,
            type:2,
            })).then(response=>{
              console.log(response.data.dataList);
              this.article = response.data.dataList;
              for(var i = 0;i < response.data.dataList.length;i++){
                $('.content').eq(i).append(response.data.dataList[i].content);
                var time = response.data.dataList[i].createDate.substr(0,10)
                $('.new1 div').eq(i).html(time)
              }
            })
            .catch(function (error) {
              console.log(error);
            });
