方法1
function unique(arr){
 var res = [arr[0]];
 for(var i=1; i<arr.length; i++){
  var repeat = false;
  for(var j=0; j<res.length; j++){
   if(arr[i] === res[j]){
    repeat = true;
    break;
   }
  }
  if(!repeat){
   res.push(arr[i]);
  }
 }
 return res;
}
console.log('------------方法一---------------');
 
console.log(unique([1,1,2,3,5,3,1,5,6,7,4]));

方法2
function unique2(arr){
 var arr2 = arr.sort();
 var res = [arr2[0]];
 for(var i=1; i<arr2.length; i++){
  if(arr2[i] !== res[res.length-1]){
   res.push(arr2[i]);
  }
 } 
 return res;
}
 
console.log('------------方法二---------------');
 
console.log(unique2([1,1,2,3,5,3,1,5,6,7,4]));

方法3
function unique3(arr){
 var res = [];
 var obj = {};
 for(var i=0; i<arr.length; i++){
  if( !obj[arr[i]] ){
   obj[arr[i]] = 1;
   res.push(arr[i]);
  }
 } 
 return res;
}
 
console.log('------------方法三---------------');
 
console.log(unique3([1,1,2,3,5,3,1,5,6,7,4]));

方法4
function unique3(arr){
 var res = [];
 var obj = {};
 for(var i=0; i<arr.length; i++){
  if( !obj[arr[i]] ){
   obj[arr[i]] = 1;
   res.push(arr[i]);
  }
 } 
 return res;
}
 
console.log('------------方法三---------------');
 
console.log(unique3([1,1,2,3,5,3,1,5,6,7,4]));

方法5
function unique5(arr){
 var res = [];
  
 for(var i=0; i<arr.length; i++){
  if( !res.includes(arr[i]) ){ // 如果res新数组包含当前循环item
   res.push(arr[i]);
  }
 }
 return res;
}
 
console.log('------------方法五---------------');
 
console.log(unique5([1,1,2,3,5,3,1,5,6,7,4]));

方法6
function unique6(arr){
 var res = [];
  
 res = arr.filter(function(item){
  return res.includes(item) ? '' : res.push(item);
 });
 return res;
}
 
console.log('------------方法六---------------');
 
console.log(unique6([1,1,2,3,5,3,1,5,6,7,4]));

方法7
function unique7(arr){
 var res = [];
  
 arr.forEach(function(item){
  res.includes(item) ? '' : res.push(item);
 }); 
 return res;
}
 
console.log('------------方法七---------------');
 
console.log(unique7([1,1,2,3,5,3,1,5,6,7,4]));

方法8
function unique8(arr){
 var i,
  j,
  len = arr.length; 
 for(i = 0; i < len; i++){
  for(j = i + 1; j < len; j++){
   if(arr[i] == arr[j]){
    arr.splice(j,1);
    len--;
    j--;
   }
  }
 }
 return arr;
}
 
console.log('------------方法八---------------');
 
console.log(unique8([1,1,2,3,5,3,1,5,6,7,4]));

方法9
function unique9(arr){
 var res = []; 
 for(var i=0; i<arr.length; i++){
  res.lastIndexOf(arr[i]) !== -1 ? '' : res.push(arr[i]);
 }
 return res;
}
 
console.log('------------方法九---------------');
 
console.log(unique9([1,1,2,3,5,3,1,5,6,7,4]));

方法10
function unique10(arr){
 //Set数据结构，它类似于数组，其成员的值都是唯一的
 return Array.from(new Set(arr)); // 利用Array.from将Set结构转换成数组
}
 
console.log('------------方法十---------------');
 
console.log(unique10([1,1,2,3,5,3,1,5,6,7,4]));